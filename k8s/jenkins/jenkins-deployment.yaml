apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 0
      serviceAccountName: jenkins-admin # 아래에서 생성할 서비스 어카운트 이름
      containers:
        - name: jenkins
          image: chiyomomo/jenkins-docker-jdk21
          ports:
            - name: http-port
              containerPort: 8080 # Jenkins UI 포트
            - name: jnlp-port
              containerPort: 50000 # Jenkins Agent 연결 포트
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home # Jenkins 데이터가 저장되는 경로
            - name: docker-socket
              mountPath: /var/run/docker.sock
          livenessProbe: # 젠킨스 컨테이너가 살아있는지 확인
            httpGet:
              path: /login
              port: http-port
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe: # 젠킨스 컨테이너가 요청을 처리할 준비가 되었는지 확인
            httpGet:
              path: /login
              port: http-port
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            limits: # 젠킨스에 필요한 리소스 제한 (환경에 맞게 조절)
              cpu: "1"
              memory: "512Mi"
            requests: # 젠킨스에 필요한 리소스 요청 (환경에 맞게 조절)
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-pvc # 위에서 생성한 PVC 이름
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket